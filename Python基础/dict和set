dict 又叫做字典和java中的map一样。

dict是可变且无序的，可以进行增删改查。Python中的dict和OC中的一样，使用大括号表示，使用key和value表示元素。其中key具有唯一且不可变性，value可以为任何
类型或相同的数据。

增：如 d['Adanm'] = 67  即可进行增加   同时如果对一个已存在的key进行赋值将覆盖之前的value
删：使用pop(key) 来删除 如 d.pop('Adanm')   删除一个不存在的key时会crash
改：如 d['Adanm'] = 80 直接使用key做索引进行修改
查：如 print(d['Adanm'])  结果显示80  直接使用key进行查找

注:  1、dict的速度比list快，但是暂用内存较大；使用list内存小，但是速度比dict慢；原因：list是进行遍历，儿dict是根据索引直接获取，在数据量巨大时明显。
     2、为避免key不存在，一：使用 key in d: 来判断；二：使用get()方法判断，key不存在时返回None，或指定的value。



set

set是一组可变且无序的有无重复key没有value数据，但是其中的key是具有唯一且不可变性。

创建一个set需要提供一个list作为输入集合，如
s = set([1, 2, 3])
print(s)
{1, 2, 3}

增：使用add(key) 来增加key
删：使用remove(key)



再议不可变对象

一个比较有特点的是字符串，本身字符串是不可变对象，但是却有一个replace()方法，其实使用replace，如下：
a = 'abc'
b = a.replace('a', 'A')
print(a)
print(b)

'abc'
'Abc'

a,b 在这里只是变量，而'abc'才是字符串对象，a只是指向了这个对象，使用replace()方法时是对该str对象进行使用，但是replace没有改变str对象的内容
只是进行了一次copy，产生了一个新的str对象，然后对copy出来的str进行了替换操作，并且b指向该新的str对象。



